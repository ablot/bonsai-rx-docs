{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{76:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"frontMatter\",(function(){return b})),n.d(t,\"metadata\",(function(){return o})),n.d(t,\"rightToc\",(function(){return r})),n.d(t,\"default\",(function(){return c}));var a=n(3),i=n(7),l=(n(0),n(97)),b={id:\"daqmx_integration\",title:\"Interfacing with NI-DAQ Devices\"},o={unversionedId:\"daqmx_integration\",id:\"daqmx_integration\",isDocsHomePage:!1,title:\"Interfacing with NI-DAQ Devices\",description:\"Requires:\",source:\"@site/docs/nidaq_integration.md\",slug:\"/daqmx_integration\",permalink:\"/docs/daqmx_integration\",editUrl:\"https://github.com/facebook/docusaurus/edit/master/website/docs/nidaq_integration.md\",version:\"current\"},r=[{value:\"<strong><code>AnalogInput</code></strong> #source\",id:\"analoginput-source\",children:[]},{value:\"<strong><code>AnalogOutput</code></strong> #sink\",id:\"analogoutput-sink\",children:[]},{value:\"<strong><code>DigitalOutput</code></strong> #sink\",id:\"digitaloutput-sink\",children:[]},{value:\"Common errors\",id:\"common-errors\",children:[]}],p={rightToc:r};function c(e){var t=e.components,n=Object(i.a)(e,[\"components\"]);return Object(l.b)(\"wrapper\",Object(a.a)({},p,n,{components:t,mdxType:\"MDXLayout\"}),Object(l.b)(\"p\",null,\"Requires:\"),Object(l.b)(\"ul\",null,Object(l.b)(\"li\",{parentName:\"ul\"},\"bonsai DAQmx Library\"),Object(l.b)(\"li\",{parentName:\"ul\"},\"NI DAQmx driver from the \",Object(l.b)(\"a\",Object(a.a)({parentName:\"li\"},{href:\"https://www.ni.com/en-gb/support/downloads/drivers/download.ni-daqmx.html#348669\"}),\"NI website\"))),Object(l.b)(\"hr\",null),Object(l.b)(\"h3\",{id:\"analoginput-source\"},Object(l.b)(\"strong\",{parentName:\"h3\"},Object(l.b)(\"inlineCode\",{parentName:\"strong\"},\"AnalogInput\")),\" \",\"#\",\"source\"),Object(l.b)(\"p\",null,\"generates a sequence of voltage measurements from one or more DAQmx analog input channels\"),Object(l.b)(\"p\",null,Object(l.b)(\"strong\",{parentName:\"p\"},\"properties\"),\":\"),Object(l.b)(\"ul\",null,Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"ActiveEdge\"),\"(\",Object(l.b)(\"em\",{parentName:\"li\"},\"NationalInstruments.DAQmx.SampleClockActiveEdge\"),\") - the edges (\",Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"Rising\"),\" or \",Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"Falling\"),\") of the NI-DAQmx device's sample clock signal used for sample acquisition\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"BufferSize\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"int\"),\") - the number of samples acquired in a single hardware buffer; the upper limit of the buffer (FIFO - 'first-in, first-out') depends on the DAQ board; if set to \",Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"0\"),\", acquisition is timed by the hardware without a buffer\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"Channels\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"System.Collections.ObjectModel.Collection<Bonsai.DAQmx.AnalogInputChannelConfiguration\"),\") - all analog input channels to acquire voltage samples from, specified by adding channels in the \",Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"AnalogInputChannelConfiguration Collection Editor\"),\" and setting its parameters as appropriate:\",Object(l.b)(\"ul\",{parentName:\"li\"},Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"PhysicalChannel\"),\" - the physical analog input channel on the board, selected from the drop-down list once the device is connected\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"ChannelName\"),\" - can be anything\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"MaximumValue\"),\" - maximum voltage value expected in measurements, not to be confused with device range; limiting the input to as small a range as appropriate can improve measurement precision\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"MinimumValue\"),\" - minimum voltage value expected in measurements, analogous to \",Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"MaximumValue\")),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"TerminalConfiguration\"),\" - input terminal configuration as \",Object(l.b)(\"a\",Object(a.a)({parentName:\"li\"},{href:\"https://www.ni.com/documentation/en/ni-daqmx/20.1/devconsid/defaulttermconfig/\"}),\"appropriate for the particular device\"),\"; for more information about the options (\",Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"Differential\"),\", \",Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"Pseudodifferential\"),\", \",Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"Rse\"),\", \",Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"Nrse\"),\") see the \",Object(l.b)(\"a\",Object(a.a)({parentName:\"li\"},{href:\"https://knowledge.ni.com/KnowledgeArticleDetails?id=kA00Z0000019QRZSA2&l=en-GB\"}),\"NI website\")),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"VoltageUnits\"),\" - the units used to return voltage measurement from the channel; for more information about the options (\",Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"Volts\"),\", \",Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"FromCustomScale\"),\", \",Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"FromTeds\"),\"), see the \",Object(l.b)(\"a\",Object(a.a)({parentName:\"li\"},{href:\"https://www.ni.com/documentation/en/ni-daqmx/latest/daqmx-prop-ref/task-ai-voltage-units-1094/\"}),\"NI website\")))),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"SampleMode\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"NationalInstruments.DAQmx.SampleQuantityMode\"),\") - specifies whether samples are acquired until the task is stopped (\",Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"SampleContinuous\"),\") or a specific number of samples, set by \",Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"BufferSize\"),\", is reached (\",Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"FiniteSamples\"),\")\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"SampleRate\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"double\"),\") - sampling rate in samples per second; the upper limit depends of the DAQ board\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"SamplesPerRead\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"int\"),\") - the number of samples bonsai tries to read at any time; the default value of \",Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"-1\"),\" means that all available data, set by \",Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"BufferSize\"),\", are acquired; positive values smaller than \",Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"BufferSize\"),\" means that data from the hardware buffer are read more often\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"SignalSource\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"string\"),\") - source terminal of the clock; if not specified, the internal clock of the device will be used\")),Object(l.b)(\"p\",null,Object(l.b)(\"strong\",{parentName:\"p\"},\"output\"),\" (\",Object(l.b)(\"em\",{parentName:\"p\"},\"OpenCV.Net.Mat\"),\"): \"),Object(l.b)(\"ul\",null,Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"IsInvalid\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"bool\"),\")\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"ElementType\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"int\"),\")\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"Size\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"OpenCV.Net.Size\"),\")\",Object(l.b)(\"ul\",{parentName:\"li\"},Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"Width\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"int\"),\")\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"Height\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"int\"),\")\"))),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"Rows\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"int\"),\")\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"Cols\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"int\"),\")\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"Step\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"int\"),\")\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"Depth\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"OpenCV.Net.Depth\"),\")\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"Channels\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"int\"),\")\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"ElementSize\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"int\"),\")\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"Data\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"System.IntPtr\"),\")\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"IsClosed\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"bool\"),\")\")),Object(l.b)(\"p\",null,Object(l.b)(\"strong\",{parentName:\"p\"},\"tip\"),\": To avoid missing data due to subscription delays, this node should be initialised before any nodes whose output \",Object(l.b)(\"inlineCode\",{parentName:\"p\"},\"AnalogInput\"),\" is supposed to acquire. For example, if the output of \",Object(l.b)(\"inlineCode\",{parentName:\"p\"},\"AnalogOutput\"),\" is fed back into \",Object(l.b)(\"inlineCode\",{parentName:\"p\"},\"AnalogInput\"),\", the latter should be placed higher in the workflow than the former.\"),Object(l.b)(\"p\",null,Object(l.b)(\"strong\",{parentName:\"p\"},\"tip\"),\": write data to file using \",Object(l.b)(\"inlineCode\",{parentName:\"p\"},\"MatrixWriter\")),Object(l.b)(\"hr\",null),Object(l.b)(\"h3\",{id:\"analogoutput-sink\"},Object(l.b)(\"strong\",{parentName:\"h3\"},Object(l.b)(\"inlineCode\",{parentName:\"strong\"},\"AnalogOutput\")),\" \",\"#\",\"sink\"),Object(l.b)(\"p\",null,\"writes a sequence of sample buffer to one or more DAQmx analog output channels\"),Object(l.b)(\"p\",null,Object(l.b)(\"strong\",{parentName:\"p\"},\"input\"),\" (\",Object(l.b)(\"em\",{parentName:\"p\"},\"OpenCV.Net.Mat\"),\") - \",Object(l.b)(\"inlineCode\",{parentName:\"p\"},\"C x N\"),\" array where \",Object(l.b)(\"inlineCode\",{parentName:\"p\"},\"C\"),\" is the number of connected analog output channels and \",Object(l.b)(\"inlineCode\",{parentName:\"p\"},\"N\"),\" is the buffer size\"),Object(l.b)(\"p\",null,Object(l.b)(\"strong\",{parentName:\"p\"},\"properties\"),\": \"),Object(l.b)(\"ul\",null,Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"ActiveEdge\"),\"(\",Object(l.b)(\"em\",{parentName:\"li\"},\"NationalInstruments.DAQmx.SampleClockActiveEdge\"),\") - the edges (\",Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"Rising\"),\" or \",Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"Falling\"),\") of the NI-DAQmx device's sample clock signal used for signal generation\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"BufferSize\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"int\"),\") - the number of samples to generate for a single hardware buffer; it should be matched to the buffer size of the input nodes that define the analog output signal; the upper limit of the buffer (FIFO - 'first-in, first-out') depends on the DAQ board; it should be matched with\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"Channels\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"System.Collections.ObjectModel.Collection<Bonsai.DAQmx.AnalogOutputChannelConfiguration\"),\") - all analog output channels that the voltage signal will be fed to, specified by adding channels in the \",Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"AnalogOutputChannelConfiguration Collection Editor\"),\" and setting its parameters as appropriate:\",Object(l.b)(\"ul\",{parentName:\"li\"},Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"PhysicalChannel\"),\" - the physical analog output channel on the board, selected from the drop-down list once the device is connected\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"ChannelName\"),\" - can be anything\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"MaximumValue\"),\" - maximum voltage value expected in the signal, not to be confused with device range\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"MinimumValue\"),\" - minimum voltage value expected in the signal, analogous to \",Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"MaximumValue\")),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"VoltageUnits\"),\" - the units used to generate a voltage signal to the channel; for more information about the options (\",Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"Volts\"),\" or \",Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"FromCustomScale\"),\"), see the \",Object(l.b)(\"a\",Object(a.a)({parentName:\"li\"},{href:\"https://zone.ni.com/reference/en-XX/help/370471AM-01/mxcprop/attr1184/\"}),\"NI website\")))),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"SampleMode\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"NationalInstruments.DAQmx.SampleQuantityMode\"),\") - specifies whether samples are generated until the task is stopped (\",Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"SampleContinuous\"),\") or a specific number of samples, set by \",Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"BufferSize\"),\", is reached (\",Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"FiniteSamples\"),\")\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"SampleRate\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"double\"),\") - the number of samples generated per second; the upper limit depends of the DAQ board\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"SignalSource\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"string\"),\") - source terminal of the clock; if not specified, the internal clock of the device will be used\")),Object(l.b)(\"p\",null,Object(l.b)(\"strong\",{parentName:\"p\"},\"output\"),\" (\",Object(l.b)(\"em\",{parentName:\"p\"},\"OpenCV.Net.Mat\"),\"): \"),Object(l.b)(\"ul\",null,Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"IsInvalid\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"bool\"),\")\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"ElementType\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"int\"),\")\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"Size\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"OpenCV.Net.Size\"),\")\",Object(l.b)(\"ul\",{parentName:\"li\"},Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"Width\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"int\"),\")\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"Height\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"int\"),\")\"))),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"Rows\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"int\"),\")\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"Cols\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"int\"),\")\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"Step\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"int\"),\")\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"Depth\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"OpenCV.Net.Depth\"),\")\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"Channels\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"int\"),\")\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"ElementSize\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"int\"),\")\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"Data\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"System.IntPtr\"),\")\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"IsClosed\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"bool\"),\")\")),Object(l.b)(\"p\",null,Object(l.b)(\"strong\",{parentName:\"p\"},\"tip\"),\": produce arbitrary input signals using \",Object(l.b)(\"inlineCode\",{parentName:\"p\"},\"FunctionGenerator\")),Object(l.b)(\"p\",null,Object(l.b)(\"strong\",{parentName:\"p\"},\"tip\"),\": independent signals of \",Object(l.b)(\"inlineCode\",{parentName:\"p\"},\"OpenCV.Net.Mat\"),\" type (\",Object(l.b)(\"inlineCode\",{parentName:\"p\"},\"1 x N\"),\" arrays) can be merged using \",Object(l.b)(\"inlineCode\",{parentName:\"p\"},\"Zip\"),\" --\\x3e \",Object(l.b)(\"inlineCode\",{parentName:\"p\"},\"Concat\"),\" (\",\"#\",\"Dsp)\"),Object(l.b)(\"hr\",null),Object(l.b)(\"h3\",{id:\"digitaloutput-sink\"},Object(l.b)(\"strong\",{parentName:\"h3\"},Object(l.b)(\"inlineCode\",{parentName:\"strong\"},\"DigitalOutput\")),\" \",\"#\",\"sink\"),Object(l.b)(\"p\",null,\"writes a sequence of logical values to one or more DAQmx digital output channels\"),Object(l.b)(\"p\",null,Object(l.b)(\"strong\",{parentName:\"p\"},\"input\"),\" (\",Object(l.b)(\"em\",{parentName:\"p\"},\"bool\"),\")\"),Object(l.b)(\"p\",null,Object(l.b)(\"strong\",{parentName:\"p\"},\"properties\"),\":\"),Object(l.b)(\"ul\",null,Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"Channels\"),\" (\",Object(l.b)(\"em\",{parentName:\"li\"},\"System.Collections.ObjectModel.Collection<Bonsai.DAQmx.DigitalOutputChannelConfiguration\"),\") - all analog output channels that the voltage signal will be fed to, specified by adding channels in the \",Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"DigitalOutputChannelConfiguration Collection Editor\"),\" and setting its parameters as appropriate:\",Object(l.b)(\"ul\",{parentName:\"li\"},Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"ChannelName\"),\" - can be anything\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"Grouping\"),\" - specifies how to group digital output lines into virtual channels; if one or more ports are specified with the \",Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"Lines\"),\" parameter, this must be \",Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"OneChannelForEachLine\"),\" (instead of \",Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"OneChannelForAllLines\"),\")\"),Object(l.b)(\"li\",{parentName:\"ul\"},Object(l.b)(\"inlineCode\",{parentName:\"li\"},\"Lines\"),\" - the physical digital output line on the board, selected from the drop-down list once the device is connected\")))),Object(l.b)(\"p\",null,Object(l.b)(\"strong\",{parentName:\"p\"},\"output\"),\" (\",Object(l.b)(\"em\",{parentName:\"p\"},\"bool\"),\")\"),Object(l.b)(\"p\",null,Object(l.b)(\"strong\",{parentName:\"p\"},\"tip\"),\": To generate a square pulse of type \",Object(l.b)(\"inlineCode\",{parentName:\"p\"},\"bool\"),\", one can repeatedly toggle a boolean at specific time intervals. The workflow might be: \",Object(l.b)(\"inlineCode\",{parentName:\"p\"},\"Boolean\"),\" --\\x3e \",Object(l.b)(\"inlineCode\",{parentName:\"p\"},\"Take\"),\" (\",Object(l.b)(\"inlineCode\",{parentName:\"p\"},\"Count\"),\": 1) --\\x3e \",Object(l.b)(\"inlineCode\",{parentName:\"p\"},\"Delay\"),\" (\",\"#\",\"reactive \",Object(l.b)(\"inlineCode\",{parentName:\"p\"},\"DueTime\"),\": 00:00:00.5 for 500 ms) --\\x3e \",Object(l.b)(\"inlineCode\",{parentName:\"p\"},\"BitwiseNot\"),\". Then use \",Object(l.b)(\"inlineCode\",{parentName:\"p\"},\"Merge\"),\" to combine \",Object(l.b)(\"inlineCode\",{parentName:\"p\"},\"Take\"),\" and \",Object(l.b)(\"inlineCode\",{parentName:\"p\"},\"BitwiseNot\"),\". Follow that by \",Object(l.b)(\"inlineCode\",{parentName:\"p\"},\"Delay\"),\" (\",\"#\",\"reactive) and \",Object(l.b)(\"inlineCode\",{parentName:\"p\"},\"Repeat\"),\". Note that this boolean toggling will be subject to jitter of the operating system's clock, which may deem this approach inappropriate for applications requiring high temporal precision. In such cases, a combination of \",Object(l.b)(\"inlineCode\",{parentName:\"p\"},\"FunctionGenerator\"),\" and \",Object(l.b)(\"inlineCode\",{parentName:\"p\"},\"AnalogOutput\"),\" can  be used instead. \"),Object(l.b)(\"hr\",null),Object(l.b)(\"h3\",{id:\"common-errors\"},\"Common errors\"),Object(l.b)(\"p\",null,Object(l.b)(\"inlineCode\",{parentName:\"p\"},\"Runtime Error: Device cannot be accessed\"),\"\\nMost likely happens because the NI-DAQmx device is not connected/powered. Several other possible reasons and remedies are listed in the bonsai error message.\"),Object(l.b)(\"p\",null,Object(l.b)(\"inlineCode\",{parentName:\"p\"},\"Runtime Error: Requested value is not a supported valuue for this property. The property valuue may be invalid because it conflicts with another property.\"),\"\\nWith some NI-DAQmx boards (e.g. USB-6341), this is caused by the workflow containing multiple \",Object(l.b)(\"inlineCode\",{parentName:\"p\"},\"AnalogOutput\"),\" nodes. Having to use a single \",Object(l.b)(\"inlineCode\",{parentName:\"p\"},\"AnalogOutput\"),\" node means that the channel non-specific parameters (e.g. \",Object(l.b)(\"inlineCode\",{parentName:\"p\"},\"SampleMode\"),\") will be the same for all channels. \"))}c.isMDXComponent=!0}}]);","name":"504b362f.75f84da7.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[8],{\n\n/***/ 76:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"frontMatter\", function() { return frontMatter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"metadata\", function() { return metadata; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rightToc\", function() { return rightToc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MDXContent; });\n/* harmony import */ var _Users_spencerw_Documents_bonsai_rx_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);\n/* harmony import */ var _Users_spencerw_Documents_bonsai_rx_docs_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(97);\nvar frontMatter={id:'daqmx_integration',title:'Interfacing with NI-DAQ Devices'};var metadata={\"unversionedId\":\"daqmx_integration\",\"id\":\"daqmx_integration\",\"isDocsHomePage\":false,\"title\":\"Interfacing with NI-DAQ Devices\",\"description\":\"Requires:\",\"source\":\"@site/docs/nidaq_integration.md\",\"slug\":\"/daqmx_integration\",\"permalink\":\"/docs/daqmx_integration\",\"editUrl\":\"https://github.com/facebook/docusaurus/edit/master/website/docs/nidaq_integration.md\",\"version\":\"current\"};/* @jsxRuntime classic */ /* @jsx mdx */var rightToc=[{value:'<strong><code>AnalogInput</code></strong> #source',id:'analoginput-source',children:[]},{value:'<strong><code>AnalogOutput</code></strong> #sink',id:'analogoutput-sink',children:[]},{value:'<strong><code>DigitalOutput</code></strong> #sink',id:'digitaloutput-sink',children:[]},{value:'Common errors',id:'common-errors',children:[]}];var layoutProps={rightToc:rightToc};var MDXLayout=\"wrapper\";function MDXContent(_ref){var components=_ref.components,props=Object(_Users_spencerw_Documents_bonsai_rx_docs_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__[/* default */ \"a\"])(_ref,[\"components\"]);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(MDXLayout,Object(_Users_spencerw_Documents_bonsai_rx_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({},layoutProps,props,{components:components,mdxType:\"MDXLayout\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Requires:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},\"bonsai DAQmx Library\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},\"NI DAQmx driver from the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_Users_spencerw_Documents_bonsai_rx_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"li\"},{\"href\":\"https://www.ni.com/en-gb/support/downloads/drivers/download.ni-daqmx.html#348669\"}),\"NI website\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"hr\",null),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h3\",{\"id\":\"analoginput-source\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"h3\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"strong\"},\"AnalogInput\")),\" \",\"#\",\"source\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"generates a sequence of voltage measurements from one or more DAQmx analog input channels\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"p\"},\"properties\"),\":\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"ActiveEdge\"),\"(\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"NationalInstruments.DAQmx.SampleClockActiveEdge\"),\") - the edges (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"Rising\"),\" or \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"Falling\"),\") of the NI-DAQmx device's sample clock signal used for sample acquisition\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"BufferSize\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"int\"),\") - the number of samples acquired in a single hardware buffer; the upper limit of the buffer (FIFO - 'first-in, first-out') depends on the DAQ board; if set to \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"0\"),\", acquisition is timed by the hardware without a buffer\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"Channels\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"System.Collections.ObjectModel.Collection<Bonsai.DAQmx.AnalogInputChannelConfiguration\"),\") - all analog input channels to acquire voltage samples from, specified by adding channels in the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"AnalogInputChannelConfiguration Collection Editor\"),\" and setting its parameters as appropriate:\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ul\",{parentName:\"li\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"PhysicalChannel\"),\" - the physical analog input channel on the board, selected from the drop-down list once the device is connected\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"ChannelName\"),\" - can be anything\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"MaximumValue\"),\" - maximum voltage value expected in measurements, not to be confused with device range; limiting the input to as small a range as appropriate can improve measurement precision\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"MinimumValue\"),\" - minimum voltage value expected in measurements, analogous to \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"MaximumValue\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"TerminalConfiguration\"),\" - input terminal configuration as \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_Users_spencerw_Documents_bonsai_rx_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"li\"},{\"href\":\"https://www.ni.com/documentation/en/ni-daqmx/20.1/devconsid/defaulttermconfig/\"}),\"appropriate for the particular device\"),\"; for more information about the options (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"Differential\"),\", \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"Pseudodifferential\"),\", \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"Rse\"),\", \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"Nrse\"),\") see the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_Users_spencerw_Documents_bonsai_rx_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"li\"},{\"href\":\"https://knowledge.ni.com/KnowledgeArticleDetails?id=kA00Z0000019QRZSA2&l=en-GB\"}),\"NI website\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"VoltageUnits\"),\" - the units used to return voltage measurement from the channel; for more information about the options (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"Volts\"),\", \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"FromCustomScale\"),\", \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"FromTeds\"),\"), see the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_Users_spencerw_Documents_bonsai_rx_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"li\"},{\"href\":\"https://www.ni.com/documentation/en/ni-daqmx/latest/daqmx-prop-ref/task-ai-voltage-units-1094/\"}),\"NI website\")))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"SampleMode\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"NationalInstruments.DAQmx.SampleQuantityMode\"),\") - specifies whether samples are acquired until the task is stopped (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"SampleContinuous\"),\") or a specific number of samples, set by \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"BufferSize\"),\", is reached (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"FiniteSamples\"),\")\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"SampleRate\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"double\"),\") - sampling rate in samples per second; the upper limit depends of the DAQ board\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"SamplesPerRead\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"int\"),\") - the number of samples bonsai tries to read at any time; the default value of \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"-1\"),\" means that all available data, set by \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"BufferSize\"),\", are acquired; positive values smaller than \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"BufferSize\"),\" means that data from the hardware buffer are read more often\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"SignalSource\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"string\"),\") - source terminal of the clock; if not specified, the internal clock of the device will be used\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"p\"},\"output\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"p\"},\"OpenCV.Net.Mat\"),\"): \"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"IsInvalid\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"bool\"),\")\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"ElementType\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"int\"),\")\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"Size\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"OpenCV.Net.Size\"),\")\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ul\",{parentName:\"li\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"Width\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"int\"),\")\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"Height\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"int\"),\")\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"Rows\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"int\"),\")\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"Cols\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"int\"),\")\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"Step\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"int\"),\")\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"Depth\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"OpenCV.Net.Depth\"),\")\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"Channels\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"int\"),\")\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"ElementSize\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"int\"),\")\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"Data\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"System.IntPtr\"),\")\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"IsClosed\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"bool\"),\")\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"p\"},\"tip\"),\": To avoid missing data due to subscription delays, this node should be initialised before any nodes whose output \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"AnalogInput\"),\" is supposed to acquire. For example, if the output of \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"AnalogOutput\"),\" is fed back into \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"AnalogInput\"),\", the latter should be placed higher in the workflow than the former.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"p\"},\"tip\"),\": write data to file using \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"MatrixWriter\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"hr\",null),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h3\",{\"id\":\"analogoutput-sink\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"h3\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"strong\"},\"AnalogOutput\")),\" \",\"#\",\"sink\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"writes a sequence of sample buffer to one or more DAQmx analog output channels\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"p\"},\"input\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"p\"},\"OpenCV.Net.Mat\"),\") - \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"C x N\"),\" array where \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"C\"),\" is the number of connected analog output channels and \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"N\"),\" is the buffer size\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"p\"},\"properties\"),\": \"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"ActiveEdge\"),\"(\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"NationalInstruments.DAQmx.SampleClockActiveEdge\"),\") - the edges (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"Rising\"),\" or \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"Falling\"),\") of the NI-DAQmx device's sample clock signal used for signal generation\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"BufferSize\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"int\"),\") - the number of samples to generate for a single hardware buffer; it should be matched to the buffer size of the input nodes that define the analog output signal; the upper limit of the buffer (FIFO - 'first-in, first-out') depends on the DAQ board; it should be matched with\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"Channels\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"System.Collections.ObjectModel.Collection<Bonsai.DAQmx.AnalogOutputChannelConfiguration\"),\") - all analog output channels that the voltage signal will be fed to, specified by adding channels in the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"AnalogOutputChannelConfiguration Collection Editor\"),\" and setting its parameters as appropriate:\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ul\",{parentName:\"li\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"PhysicalChannel\"),\" - the physical analog output channel on the board, selected from the drop-down list once the device is connected\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"ChannelName\"),\" - can be anything\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"MaximumValue\"),\" - maximum voltage value expected in the signal, not to be confused with device range\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"MinimumValue\"),\" - minimum voltage value expected in the signal, analogous to \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"MaximumValue\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"VoltageUnits\"),\" - the units used to generate a voltage signal to the channel; for more information about the options (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"Volts\"),\" or \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"FromCustomScale\"),\"), see the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_Users_spencerw_Documents_bonsai_rx_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"li\"},{\"href\":\"https://zone.ni.com/reference/en-XX/help/370471AM-01/mxcprop/attr1184/\"}),\"NI website\")))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"SampleMode\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"NationalInstruments.DAQmx.SampleQuantityMode\"),\") - specifies whether samples are generated until the task is stopped (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"SampleContinuous\"),\") or a specific number of samples, set by \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"BufferSize\"),\", is reached (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"FiniteSamples\"),\")\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"SampleRate\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"double\"),\") - the number of samples generated per second; the upper limit depends of the DAQ board\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"SignalSource\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"string\"),\") - source terminal of the clock; if not specified, the internal clock of the device will be used\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"p\"},\"output\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"p\"},\"OpenCV.Net.Mat\"),\"): \"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"IsInvalid\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"bool\"),\")\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"ElementType\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"int\"),\")\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"Size\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"OpenCV.Net.Size\"),\")\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ul\",{parentName:\"li\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"Width\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"int\"),\")\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"Height\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"int\"),\")\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"Rows\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"int\"),\")\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"Cols\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"int\"),\")\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"Step\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"int\"),\")\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"Depth\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"OpenCV.Net.Depth\"),\")\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"Channels\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"int\"),\")\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"ElementSize\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"int\"),\")\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"Data\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"System.IntPtr\"),\")\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"IsClosed\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"bool\"),\")\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"p\"},\"tip\"),\": produce arbitrary input signals using \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"FunctionGenerator\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"p\"},\"tip\"),\": independent signals of \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"OpenCV.Net.Mat\"),\" type (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"1 x N\"),\" arrays) can be merged using \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"Zip\"),\" --> \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"Concat\"),\" (\",\"#\",\"Dsp)\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"hr\",null),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h3\",{\"id\":\"digitaloutput-sink\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"h3\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"strong\"},\"DigitalOutput\")),\" \",\"#\",\"sink\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"writes a sequence of logical values to one or more DAQmx digital output channels\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"p\"},\"input\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"p\"},\"bool\"),\")\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"p\"},\"properties\"),\":\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"Channels\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"System.Collections.ObjectModel.Collection<Bonsai.DAQmx.DigitalOutputChannelConfiguration\"),\") - all analog output channels that the voltage signal will be fed to, specified by adding channels in the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"DigitalOutputChannelConfiguration Collection Editor\"),\" and setting its parameters as appropriate:\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ul\",{parentName:\"li\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"ChannelName\"),\" - can be anything\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"Grouping\"),\" - specifies how to group digital output lines into virtual channels; if one or more ports are specified with the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"Lines\"),\" parameter, this must be \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"OneChannelForEachLine\"),\" (instead of \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"OneChannelForAllLines\"),\")\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"Lines\"),\" - the physical digital output line on the board, selected from the drop-down list once the device is connected\")))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"p\"},\"output\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"p\"},\"bool\"),\")\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"p\"},\"tip\"),\": To generate a square pulse of type \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"bool\"),\", one can repeatedly toggle a boolean at specific time intervals. The workflow might be: \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"Boolean\"),\" --> \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"Take\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"Count\"),\": 1) --> \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"Delay\"),\" (\",\"#\",\"reactive \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"DueTime\"),\": 00:00:00.5 for 500 ms) --> \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"BitwiseNot\"),\". Then use \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"Merge\"),\" to combine \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"Take\"),\" and \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"BitwiseNot\"),\". Follow that by \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"Delay\"),\" (\",\"#\",\"reactive) and \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"Repeat\"),\". Note that this boolean toggling will be subject to jitter of the operating system's clock, which may deem this approach inappropriate for applications requiring high temporal precision. In such cases, a combination of \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"FunctionGenerator\"),\" and \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"AnalogOutput\"),\" can  be used instead. \"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"hr\",null),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h3\",{\"id\":\"common-errors\"},\"Common errors\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"Runtime Error: Device cannot be accessed\"),\"\\nMost likely happens because the NI-DAQmx device is not connected/powered. Several other possible reasons and remedies are listed in the bonsai error message.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"Runtime Error: Requested value is not a supported valuue for this property. The property valuue may be invalid because it conflicts with another property.\"),\"\\nWith some NI-DAQmx boards (e.g. USB-6341), this is caused by the workflow containing multiple \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"AnalogOutput\"),\" nodes. Having to use a single \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"AnalogOutput\"),\" node means that the channel non-specific parameters (e.g. \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"SampleMode\"),\") will be the same for all channels. \"));};MDXContent.isMDXComponent=true;\n\n/***/ })\n\n}]);","inputSourceMap":null}