(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{79:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return r})),a.d(t,"rightToc",(function(){return m})),a.d(t,"default",(function(){return p}));var n=a(3),i=a(7),b=(a(0),a(91)),l={id:"video_acquisition",title:"Acquiring Video"},r={unversionedId:"fundamentals/video_acquisition",id:"fundamentals/video_acquisition",isDocsHomePage:!1,title:"Acquiring Video",description:"Basler cameras",source:"@site/docs\\fundamentals\\video_acquisition.md",slug:"/fundamentals/video_acquisition",permalink:"/docs/fundamentals/video_acquisition",editUrl:"https://github.com/spewil/bonsai-rx-docs/edit/master/website/docs/fundamentals/video_acquisition.md",version:"current",sidebar:"docs",previous:{title:"BitwiseNot",permalink:"/docs/core/expressions/bitwise_not"},next:{title:"Style Guide",permalink:"/docs/meta/style_guide"}},m=[{value:"<strong>Basler cameras</strong>",id:"basler-cameras",children:[{value:"<strong><code>PylonCapture</code></strong> #source",id:"pyloncapture-source",children:[]}]},{value:"<strong>FLIR Spinnaker cameras</strong>",id:"flir-spinnaker-cameras",children:[{value:"<strong><code>SpinnakerCapture</code></strong> #source",id:"spinnakercapture-source",children:[]}]},{value:"<strong>Webcam</strong>",id:"webcam",children:[{value:"<strong><code>CameraCapture</code></strong> #source",id:"cameracapture-source",children:[]}]},{value:"Common errors",id:"common-errors",children:[]}],c={rightToc:m};function p(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(b.b)("wrapper",Object(n.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(b.b)("h2",{id:"basler-cameras"},Object(b.b)("strong",{parentName:"h2"},"Basler cameras")),Object(b.b)("p",null,"Requires:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},"bonsai Pylon Library"),Object(b.b)("li",{parentName:"ul"},"pylon Camera Software Suite 5.1.0 from the ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://www.baslerweb.com/en/sales-support/downloads/software-downloads/"}),"basler\nwebsite"))),Object(b.b)("h3",{id:"pyloncapture-source"},Object(b.b)("strong",{parentName:"h3"},Object(b.b)("inlineCode",{parentName:"strong"},"PylonCapture"))," ","#","source"),Object(b.b)("p",null,"acquires a sequence of images from a basler camera using the pylon software"),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"properties"),":"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"ParameterFile")," - full path to an ",Object(b.b)("inlineCode",{parentName:"li"},".fps")," file describing the desired\ncamera features. The file can be created in pylonViewer\n",Object(b.b)("inlineCode",{parentName:"li"},"Camera -> Save features")," once the features are set."),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"SerialNumber")," - serial number of the camera, identical to that\ndisplayed in pylonViewer. It should appear in the drop-down list\nonce the camera is connected.")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"output")," (",Object(b.b)("em",{parentName:"p"},"Bonsai.pylon.pylonDataFrame"),"):"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Image")," (",Object(b.b)("em",{parentName:"li"},"OpenCV.Net.IpIImage"),") - 2D matrix of pixels, accepted as\ninput by ",Object(b.b)("inlineCode",{parentName:"li"},"VideoWriter"),Object(b.b)("ul",{parentName:"li"},Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"IsInvalid")," (",Object(b.b)("em",{parentName:"li"},"bool"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"ElementType")," (",Object(b.b)("em",{parentName:"li"},"int"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Size")," (",Object(b.b)("em",{parentName:"li"},"OpenCV.Net.Size"),")",Object(b.b)("ul",{parentName:"li"},Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Width")," (",Object(b.b)("em",{parentName:"li"},"int"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Height")," (",Object(b.b)("em",{parentName:"li"},"int"),")"))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Depth")," (",Object(b.b)("em",{parentName:"li"},"OpenCV.Net.IpIDepth"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Channels")," (",Object(b.b)("em",{parentName:"li"},"int"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Width")," (",Object(b.b)("em",{parentName:"li"},"int"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Height")," (",Object(b.b)("em",{parentName:"li"},"int"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"WidthStep")," (",Object(b.b)("em",{parentName:"li"},"int"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"ImageData")," (",Object(b.b)("em",{parentName:"li"},"System.IntPtr"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"ChannelOfInterest")," (",Object(b.b)("em",{parentName:"li"},"int"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"RegionOfInterest")," (",Object(b.b)("em",{parentName:"li"},"OpenCV.Net.Rect"),")",Object(b.b)("ul",{parentName:"li"},Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"X")," (",Object(b.b)("em",{parentName:"li"},"int"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Y")," (",Object(b.b)("em",{parentName:"li"},"int"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Width")," (",Object(b.b)("em",{parentName:"li"},"int"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Height")," (",Object(b.b)("em",{parentName:"li"},"int"),")"))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"IsClosed")," (",Object(b.b)("em",{parentName:"li"},"bool"),")"))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"GrabResult")," (",Object(b.b)("em",{parentName:"li"},"Basler.Pylon.IGrabResult"),")",Object(b.b)("ul",{parentName:"li"},Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Orientation")," (",Object(b.b)("em",{parentName:"li"},"Basler.Pylon.ImageOrientation"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"PaddingX")," (",Object(b.b)("em",{parentName:"li"},"int"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Height")," (",Object(b.b)("em",{parentName:"li"},"int"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Width")," (",Object(b.b)("em",{parentName:"li"},"int"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"PixelTypeValue")," (",Object(b.b)("em",{parentName:"li"},"Basler.Pylon.PixelTypei)")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"PixelData")," (",Object(b.b)("em",{parentName:"li"},"object"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"IsValid")," (",Object(b.b)("em",{parentName:"li"},"bool"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"SkippedImageCount")," (",Object(b.b)("em",{parentName:"li"},"long"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"ImageNumber")," (",Object(b.b)("em",{parentName:"li"},"long"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"ID")," (",Object(b.b)("em",{parentName:"li"},"long"),") - 1-based frame index"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"BufferUserData")," (",Object(b.b)("em",{parentName:"li"},"object"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"StreamGrabberUserData")," (",Object(b.b)("em",{parentName:"li"},"object"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Timestamp")," (",Object(b.b)("em",{parentName:"li"},"long"),") - hardware timestamp"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"BlockID")," (",Object(b.b)("em",{parentName:"li"},"long"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"PayloadSize")," (",Object(b.b)("em",{parentName:"li"},"long"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"HasCRC")," (",Object(b.b)("em",{parentName:"li"},"bool"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"ChunkData")," (",Object(b.b)("em",{parentName:"li"},"Basler.Pylon.IParameterCollection"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"HasChunkData")," (",Object(b.b)("em",{parentName:"li"},"bool"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"ErrorDescription")," (",Object(b.b)("em",{parentName:"li"},"string"),")",Object(b.b)("ul",{parentName:"li"},Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Length")," (",Object(b.b)("em",{parentName:"li"},"int"),")"))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"ErrorCode")," (",Object(b.b)("em",{parentName:"li"},"int"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"GrabSucceeded")," (",Object(b.b)("em",{parentName:"li"},"bool"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"PaddingY")," (",Object(b.b)("em",{parentName:"li"},"int"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"PayloadTypeValue")," (",Object(b.b)("em",{parentName:"li"},"Basler.Pylon.PayloadType"),")")))),Object(b.b)("hr",null),Object(b.b)("h2",{id:"flir-spinnaker-cameras"},Object(b.b)("strong",{parentName:"h2"},"FLIR Spinnaker cameras")),Object(b.b)("p",null,"Requires:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},"bonsai Spinnaker Library"),Object(b.b)("li",{parentName:"ul"},"Spinnaker SDK 1.29.0.5 from the ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://meta.box.lenovo.com/v/link/view/a1995795ffba47dbbe45771477319cc3"}),"FLIR\nwebsite"))),Object(b.b)("h3",{id:"spinnakercapture-source"},Object(b.b)("strong",{parentName:"h3"},Object(b.b)("inlineCode",{parentName:"strong"},"SpinnakerCapture"))," ","#","source"),Object(b.b)("p",null,"acquires a sequence of images from a FLIR camera using the Spinnaker software"),Object(b.b)("p",null,"Camera parameters have to be set in SpinView every time a camera is connected."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"properties"),":"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"ColorProcessing")," - the methodDefault vs. NoColorProcessing"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Index")," - index of the camera to acquire images from")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"output")," (",Object(b.b)("em",{parentName:"p"},"Bonsai.Spinnaker.SpinnakerDataFrame"),"):"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Image")," (",Object(b.b)("em",{parentName:"li"},"OpenCV.Net.IpIImage"),") - 2D matrix of pixels, accepted as\ninput by ",Object(b.b)("inlineCode",{parentName:"li"},"VideoWriter"),Object(b.b)("ul",{parentName:"li"},Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"IsInvalid")," (",Object(b.b)("em",{parentName:"li"},"bool"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"ElementType")," (",Object(b.b)("em",{parentName:"li"},"int"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Size")," (",Object(b.b)("em",{parentName:"li"},"OpenCV.Net.Size"),")",Object(b.b)("ul",{parentName:"li"},Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Width")," (",Object(b.b)("em",{parentName:"li"},"int"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Height")," (",Object(b.b)("em",{parentName:"li"},"int"),")"))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Depth")," (",Object(b.b)("em",{parentName:"li"},"OpenCV.Net.IpIDepth"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Channels")," (",Object(b.b)("em",{parentName:"li"},"int"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Width")," (",Object(b.b)("em",{parentName:"li"},"int"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Height")," (",Object(b.b)("em",{parentName:"li"},"int"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"WidthStep")," (",Object(b.b)("em",{parentName:"li"},"int"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"ImageData")," (",Object(b.b)("em",{parentName:"li"},"System.IntPtr"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"ChannelOfInterest")," (",Object(b.b)("em",{parentName:"li"},"int"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"RegionOfInterest")," (",Object(b.b)("em",{parentName:"li"},"OpenCV.Net.Rect"),")",Object(b.b)("ul",{parentName:"li"},Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"X")," (",Object(b.b)("em",{parentName:"li"},"int"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Y")," (",Object(b.b)("em",{parentName:"li"},"int"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Width")," (",Object(b.b)("em",{parentName:"li"},"int"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Height")," (",Object(b.b)("em",{parentName:"li"},"int"),")"))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"IsClosed")," (",Object(b.b)("em",{parentName:"li"},"bool"),")"))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"ChunkData")," (",Object(b.b)("em",{parentName:"li"},"SpinnakerNET.ManagedChunkData"),")",Object(b.b)("ul",{parentName:"li"},Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"InferenceBoundingBoxResult"),"(",Object(b.b)("em",{parentName:"li"},"SpinnakerNET.ManagedInferenceBoundingBoxResult"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"InferenceConfidence")," (",Object(b.b)("em",{parentName:"li"},"double"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"InferenceResult")," (",Object(b.b)("em",{parentName:"li"},"long"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Scan3dCoordinateReferenceValue")," (",Object(b.b)("em",{parentName:"li"},"double"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Scan3dTransformValue")," (",Object(b.b)("em",{parentName:"li"},"double"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Scan3dAxisMax")," (",Object(b.b)("em",{parentName:"li"},"double"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Scan3dAxisMin")," (",Object(b.b)("em",{parentName:"li"},"double"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Scan3dInvalidDataValue")," (",Object(b.b)("em",{parentName:"li"},"double"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Scan3dCoordinateOffset")," (",Object(b.b)("em",{parentName:"li"},"double"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Scan3dCoordinateScale")," (",Object(b.b)("em",{parentName:"li"},"double"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"StreamChannelID")," (",Object(b.b)("em",{parentName:"li"},"long"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"TransferQueueCurrentBlockCount")," (",Object(b.b)("em",{parentName:"li"},"long"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"TransferBlockID")," (",Object(b.b)("em",{parentName:"li"},"long"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"LinePitch")," (",Object(b.b)("em",{parentName:"li"},"long"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"EncoderValue")," (",Object(b.b)("em",{parentName:"li"},"long"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"ScanLineSelector")," (",Object(b.b)("em",{parentName:"li"},"long"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"TimerValue")," (",Object(b.b)("em",{parentName:"li"},"double"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"CounterValue")," (",Object(b.b)("em",{parentName:"li"},"double"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"LineStatusAll")," (",Object(b.b)("em",{parentName:"li"},"long"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"TimestampLatchValue")," (",Object(b.b)("em",{parentName:"li"},"long"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"PixelDynamicRangeMax")," (",Object(b.b)("em",{parentName:"li"},"long"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"PixelDynamicRangeMin")," (",Object(b.b)("em",{parentName:"li"},"long"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"PartSelector")," (",Object(b.b)("em",{parentName:"li"},"long"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"SerialDataLength")," (",Object(b.b)("em",{parentName:"li"},"long"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"OffsetY")," (",Object(b.b)("em",{parentName:"li"},"long"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"OffsetX")," (",Object(b.b)("em",{parentName:"li"},"long"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"CRC")," (",Object(b.b)("em",{parentName:"li"},"long"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"SequencerSetActive")," (",Object(b.b)("em",{parentName:"li"},"long"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Gain")," (",Object(b.b)("em",{parentName:"li"},"double"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Height")," (",Object(b.b)("em",{parentName:"li"},"long"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Image")," (",Object(b.b)("em",{parentName:"li"},"long"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Width")," (",Object(b.b)("em",{parentName:"li"},"long"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"ExposureEndLineStatusAll")," (",Object(b.b)("em",{parentName:"li"},"long"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Timestamp")," (",Object(b.b)("em",{parentName:"li"},"long"),") - hardware timestamp"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"ExposureTime")," (",Object(b.b)("em",{parentName:"li"},"double"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"FrameID")," (",Object(b.b)("em",{parentName:"li"},"long"),") - 1-based frame index"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"BlackLevel")," (",Object(b.b)("em",{parentName:"li"},"double"),")")))),Object(b.b)("hr",null),Object(b.b)("h2",{id:"webcam"},Object(b.b)("strong",{parentName:"h2"},"Webcam")),Object(b.b)("p",null,"Requires:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},"bonsai Vision Library")),Object(b.b)("h3",{id:"cameracapture-source"},Object(b.b)("strong",{parentName:"h3"},Object(b.b)("inlineCode",{parentName:"strong"},"CameraCapture"))," ","#","source"),Object(b.b)("p",null,"acquires a sequence of images from camera with the specified index"),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"properties"),":"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"CaptureProperties")," (",Object(b.b)("em",{parentName:"li"},"Bonsai.Vision.CapturePropertyCollection"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Index")," (",Object(b.b)("em",{parentName:"li"},"int"),") - index of the camera to acquire images from")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"output")," (",Object(b.b)("em",{parentName:"p"},"OpenCV.Net.IpIImage"),") - 2D matrix of pixels, accepted as input by ",Object(b.b)("inlineCode",{parentName:"p"},"VideoWriter")),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"IsInvalid")," (",Object(b.b)("em",{parentName:"li"},"bool"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"ElementType")," (",Object(b.b)("em",{parentName:"li"},"int"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Size")," (",Object(b.b)("em",{parentName:"li"},"OpenCV.Net.Size"),")",Object(b.b)("ul",{parentName:"li"},Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Width")," (",Object(b.b)("em",{parentName:"li"},"int"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Height")," (",Object(b.b)("em",{parentName:"li"},"int"),")"))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Depth")," (",Object(b.b)("em",{parentName:"li"},"OpenCV.Net.IpIDepth"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Channels")," (",Object(b.b)("em",{parentName:"li"},"int"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Width")," (",Object(b.b)("em",{parentName:"li"},"int"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Height")," (",Object(b.b)("em",{parentName:"li"},"int"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"WidthStep")," (",Object(b.b)("em",{parentName:"li"},"int"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"ImageData")," (",Object(b.b)("em",{parentName:"li"},"System.IntPtr"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"ChannelOfInterest")," (",Object(b.b)("em",{parentName:"li"},"int"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"RegionOfInterest")," (",Object(b.b)("em",{parentName:"li"},"OpenCV.Net.Rect"),")",Object(b.b)("ul",{parentName:"li"},Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"X")," (",Object(b.b)("em",{parentName:"li"},"int"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Y")," (",Object(b.b)("em",{parentName:"li"},"int"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Width")," (",Object(b.b)("em",{parentName:"li"},"int"),")"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Height")," (",Object(b.b)("em",{parentName:"li"},"int"),")"))),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"IsClosed")," (",Object(b.b)("em",{parentName:"li"},"bool"),")")),Object(b.b)("hr",null),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"tip"),": write video to file using ",Object(b.b)("inlineCode",{parentName:"p"},"VideoWriter")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"tip"),": to visualise the video during acquisition, install the bonsai Vision Design Library and open ",Object(b.b)("inlineCode",{parentName:"p"},"Bonsai.Vision.Design.IpIImageVisualizer"),"from the ",Object(b.b)("inlineCode",{parentName:"p"},"Image")," output node of the respective image capture node"),Object(b.b)("hr",null),Object(b.b)("h2",{id:"common-errors"},"Common errors"),Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"Runtime error: Unable to acquire camera frame"),"\\\nOne possible reason is that the camera is currently open in another software, e.g. pylonViewer or SpinView."))}p.isMDXComponent=!0},91:function(e,t,a){"use strict";a.d(t,"a",(function(){return o})),a.d(t,"b",(function(){return N}));var n=a(0),i=a.n(n);function b(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){b(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function m(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},b=Object.keys(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var c=i.a.createContext({}),p=function(e){var t=i.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},o=function(e){var t=p(e.components);return i.a.createElement(c.Provider,{value:t},e.children)},O={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},j=i.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,b=e.originalType,l=e.parentName,c=m(e,["components","mdxType","originalType","parentName"]),o=p(a),j=n,N=o["".concat(l,".").concat(j)]||o[j]||O[j]||b;return a?i.a.createElement(N,r(r({ref:t},c),{},{components:a})):i.a.createElement(N,r({ref:t},c))}));function N(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var b=a.length,l=new Array(b);l[0]=j;var r={};for(var m in t)hasOwnProperty.call(t,m)&&(r[m]=t[m]);r.originalType=e,r.mdxType="string"==typeof e?e:n,l[1]=r;for(var c=2;c<b;c++)l[c]=a[c];return i.a.createElement.apply(null,l)}return i.a.createElement.apply(null,a)}j.displayName="MDXCreateElement"}}]);