(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{106:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return a})),r.d(t,"rightToc",(function(){return s})),r.d(t,"default",(function(){return u}));var n=r(3),o=r(7),c=(r(0),r(121)),i={id:"subscribe_when",title:"SubscribeWhen"},a={unversionedId:"core/reactive/subscribe_when",id:"core/reactive/subscribe_when",isDocsHomePage:!1,title:"SubscribeWhen",description:"Category: Combinator (filtering)",source:"@site/docs/core/reactive/subscribe_when.md",slug:"/core/reactive/subscribe_when",permalink:"/bonsai-rx-docs/docs/core/reactive/subscribe_when",editUrl:"https://github.com/spewil/bonsai-rx-docs/edit/main/docs/core/reactive/subscribe_when.md",version:"current",sidebar:"docs",previous:{title:"SkipUntil",permalink:"/bonsai-rx-docs/docs/core/reactive/skip_until"},next:{title:"Take",permalink:"/bonsai-rx-docs/docs/core/reactive/take"}},s=[],p={rightToc:s};function u(e){var t=e.components,r=Object(o.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},p,r,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Category"),": Combinator (filtering)"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Brief"),": Subscribes to the first observable sequence only after the second sequence produces an element."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Input"),": Accepts many input types (single elements, tuples, arrays) as long as exactly two inputs are supplied"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Output"),": Same type as the first input sequence"),Object(c.b)("hr",null),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Tip"),": Use ",Object(c.b)("inlineCode",{parentName:"p"},"SubscribeWhen")," -> ",Object(c.b)("inlineCode",{parentName:"p"},"Take")," -> ",Object(c.b)("inlineCode",{parentName:"p"},"Repeat")," to subscribe to the first observable sequence and take the specified number of inputs multiple times."))}u.isMDXComponent=!0},121:function(e,t,r){"use strict";r.d(t,"a",(function(){return b})),r.d(t,"b",(function(){return m}));var n=r(0),o=r.n(n);function c(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){c(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=o.a.createContext({}),u=function(e){var t=o.a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},b=function(e){var t=u(e.components);return o.a.createElement(p.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},f=o.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,c=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),b=u(r),f=n,m=b["".concat(i,".").concat(f)]||b[f]||l[f]||c;return r?o.a.createElement(m,a(a({ref:t},p),{},{components:r})):o.a.createElement(m,a({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=r.length,i=new Array(c);i[0]=f;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a.mdxType="string"==typeof e?e:n,i[1]=a;for(var p=2;p<c;p++)i[p]=r[p];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,r)}f.displayName="MDXCreateElement"}}]);